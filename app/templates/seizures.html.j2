{%- if points is defined and points != None and points | length > 0 and points is iterable -%}
    {%- set total_points    = points | length -%}
{%- else -%}
    {%- set total_points    = 0 -%}
    {%- set points          = [] -%}
{%- endif -%}
{%- if total_points == 0 and error_message is not defined -%}
    {%- set error_message   = "Sorry, but no seizures were found! Please try again later, or perform another search." -%}
{%- endif -%}
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="content-type" content="text/html; charset=utf-8">
        <meta name="robots" content="noimageindex, nofollow, nosnippet">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>
            Eric's Seizures ({{ total_points }} seizure{% if total_points != 1 %}s{% endif %})
        </title>
        <link href="{{ url_for('static', filename='style.css') }}" rel="stylesheet" type="text/css">
        <link href="{{ url_for('static', filename='favicon.ico') }}" rel="shortcut icon" type="image/vnd.microsoft.icon">
    {%- if googlemaps_api_key and total_points > 0 %}
        <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key={{ googlemaps_api_key }}"></script>
    {%- endif %}
        <script type="text/javascript">
    {%- if total_points > 0 %}

            // Start with empty markers and infowindows
            var markers     = [];
            var infowindows = [];

            // Google map init function
            function initMap() {

                // Create the map at the average middle point, with specific zoom level
                const map   = new google.maps.Map(document.getElementById('map-canvas'), {
                    center: {
                                lat: {{ points | map(attribute='latitude') | sum / total_points }},
                                lng: {{- points | map(attribute='longitude') | sum / total_points }}
                            },
                    zoom:   12
                });

        {%- for point in points %}
            {%- set unix_time = point['time'] | string | truncate(10, True, '') %}
            {%- set pretty_time = point['time'] | format_datetime %}

              // Begin marker {{ unix_time }}
                var contentString_{{ unix_time }}   = '<table>';
                contentString_{{ unix_time }}       += '<tr>';
                contentString_{{ unix_time }}       += '<th class="marker-header" title="{{ loop.index }} of {{ total_points }} ({{ unix_time }})">';
                contentString_{{ unix_time }}       += '<a href="#{{ unix_time }}">{{ loop.index }} of {{ total_points }}</a>';
                contentString_{{ unix_time }}       += '</th>';
                contentString_{{ unix_time }}       += '<th class="marker-header" title="{{ pretty_time | striptags }}">{{ pretty_time }}</th>';
                contentString_{{ unix_time }}       += '</tr>';
            {%- for i in point.keys() %}
                contentString_{{ unix_time }}       += '<tr><td>{{ i | title }}</td><td>{{ point[i] | safe | replace("'", "\\'") }}</td></tr>';
            {%- endfor %}
                contentString_{{ unix_time }}       += '</table>';
                const infowindow_{{ unix_time }}    = new google.maps.InfoWindow({
                    content:    contentString_{{ unix_time }},
                });

                const marker_{{ unix_time }}    = new google.maps.Marker({
                    position:   { lat: {{ point['latitude'] }}, lng: {{ point['longitude'] }} },
                    map,
                    title:      "{{ pretty_time | striptags }}",
                });
                marker_{{ unix_time }}.addListener('click', () => {
                    closeWindows(infowindows);
                    infowindow_{{ unix_time }}.open({
                        anchor:         marker_{{ unix_time }},
                        map,
                        shouldFocus:    true
                    });
                    infowindows[{{ unix_time }}]    = infowindow_{{ unix_time }};
                });
                markers[{{ unix_time }}] = marker_{{ unix_time }};

                infowindow_{{ unix_time }}.addListener('closeclick', () => {
                    delete(infowindows[{{ unix_time }}]);
                });
              // End marker {{ unix_time }}

        {%- endfor %}

                // Open infowindow for a marker if its key is in the anchor tag
                if (window.location.hash.substr(1)) {
                    var time = window.location.hash.substr(1);
                    markerOpen(time);
                };

                // If there is only a single marker available in the search results, open its infowindow
                if (Object.keys(markers).length == 1) {
                    for (const [time, marker] of Object.entries(markers)) {
                        markerOpen(time);
                    };
                };

            }; // End initMap function

            // Create a function to close any open infowindows for markers
            function closeWindows(infowindows) {
                if (infowindows) {
                    for (const [key, value] of Object.entries(infowindows)) {
                        infowindows[key].close();
                        delete(infowindows[key]);
                    };
                };
            };

            // Create a function to open infowindows for markers by the time key
            function markerOpen(time) {
                google.maps.event.trigger(markers[time], 'click');
            };
    {%- endif %}

            // Create a function to handle date selection via UI input box
            function chooseDate(chosenDate) {
                window.location.href = "{{ url_for('view_date', date='') }}" + chosenDate;
            };

        </script>
    </head>
    <body{% if googlemaps_api_key and total_points > 0 %} onload="initMap();"{% endif %}>
        <div id="left-box">
            <h1>
                <a href="{{ url_for('index') }}" title="Eric's Seizures">
                    <span id="logo"></span>
                    Eric's Seizures
                </a>
            </h1>
            <h2 title="{{ total_points }} seizure{% if total_points != 1 %}s{% endif %}">
                {{ total_points }} seizure{% if total_points != 1 %}s{% endif %}
            </h2>
            <h3 id="choose-date" title="Choose Date">
                <input type="date" pattern="\d{4}-\d{2}-\d{2}" max="{{ today }}" onchange="chooseDate(this.value);" id="date
    {%- if date -%}
                -chosen" value="{{ date }}" title="{{ date }}
    {%- endif -%}
                ">
            </h3>
    {%- if timespans is defined and timespans is iterable and timespans | length > 1 %}
            <div id="time-spans">
        {%- for timespan in timespans %}
                    <a href="{{ url_for('view_span', span=timespan) }}"{% if timespan == span %} id="span-chosen"{% endif %} title="{{ timespan }}">{{ timespan }}</a>
        {%- endfor %}
            </div>
    {%- endif %}
    {%- if error_message is defined %}
            <div id="error">
                <p>
                    {{ error_message }}
                </p>
            </div>
    {%- endif %}
    {%- if googlemaps_api_key and total_points > 0 %}
            <div id="map-canvas"></div>
    {%- endif %}
        </div>
        <div id="right-box">
            <div id="seizure-list" title="Seizure List">
                <ol>
            {%- for point in points %}
                {%- set unix_time = point['time'] | string | truncate(10, True, '') %}
                    <li id="{{ unix_time }}" title="{{ unix_time }}">
                        <a href="#{{ unix_time }}" onclick="markerOpen({{ unix_time }});" title="{{ loop.index }}. {{ point['time'] | format_datetime | striptags }} (of {{ total_points }})">
                            {{ point['time'] | format_datetime | striptags }}
                        </a>
                    </li>
            {%- endfor %}
                </ol>
            </div>
        </div>
    </body>
</html>
